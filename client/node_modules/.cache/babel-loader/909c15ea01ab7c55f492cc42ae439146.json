{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/achoudhuri/Study/CodePractice/PODTable/client/src/components/ListPods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { HEADINGS } from \"./headings\"; // import FilteringTable from \"./FilteringTable\";\n\nimport DataTable from \"./DataTable\";\nimport \"./table.css\";\n\nfunction ListPods() {\n  _s();\n\n  const [podDetails, setPodDetails] = useState([]);\n  const [row, setRowData] = useState([]);\n  const [filter, setFilter] = useState(\"\"); //filterRecords = (record)=> (record.name.indexOf(this.filter) > -1)\n\n  function handleChange(val) {\n    setFilter(val); //let filteredRows = [];\n\n    if (val.trim() !== \"\") {\n      const filteredRows = row.filter(r => r[0].toLowerCase().indexOf(val.toLowerCase()) > -1);\n      console.log(\"filteredRows : \", filteredRows); //setPodDetails(filteredRows);\n      //const result = filteredRows.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n      //console.log(\"result : \", result)\n\n      setRowData(filteredRows);\n    } else {\n      //console.log(\"prevPodDetails : \", prevPodDetails)\n      //console.log(\"prevRowData : \", prevRowData)\n      //setPodDetails(prevPodDetails);\n      const result = podDetails.map(({\n        name,\n        nameSpace,\n        status,\n        age\n      }) => [name, nameSpace, status, age]);\n      setRowData(result); //setRowData(prevRowData);    \n    }\n  }\n\n  useEffect(() => {\n    console.log(\"===use effect call===\");\n    fetch(\"http://localhost:3001/\").then(response => response.json()).then(data => {\n      setPodDetails(data);\n      const result = data.map(({\n        name,\n        nameSpace,\n        status,\n        age\n      }) => [name, nameSpace, status, age]);\n      setRowData(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Pods\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter || \"\",\n      onChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      headings: HEADINGS,\n      rows: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPods, \"pJ56XjDN5i274KiI4DgH09FbNwA=\");\n\n_c = ListPods;\nexport default ListPods;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPods\");","map":{"version":3,"sources":["/home/achoudhuri/Study/CodePractice/PODTable/client/src/components/ListPods.js"],"names":["React","useEffect","useState","HEADINGS","DataTable","ListPods","podDetails","setPodDetails","row","setRowData","filter","setFilter","handleChange","val","trim","filteredRows","r","toLowerCase","indexOf","console","log","result","map","name","nameSpace","status","age","fetch","then","response","json","data","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,aAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,GAAD,EAAMC,UAAN,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAHgB,CAKhB;;AAGA,WAASU,YAAT,CAAsBC,GAAtB,EAA2B;AACvBF,IAAAA,SAAS,CAACE,GAAD,CAAT,CADuB,CAGvB;;AAEA,QAAGA,GAAG,CAACC,IAAJ,OAAe,EAAlB,EAAsB;AAClB,YAAMC,YAAY,GAAGP,GAAG,CAACE,MAAJ,CAAYM,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,GAAmBC,OAAnB,CAA2BL,GAAG,CAACI,WAAJ,EAA3B,IAAgD,CAAC,CAAnE,CAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,YAA/B,EAFkB,CAGlB;AACA;AACA;;AACAN,MAAAA,UAAU,CAACM,YAAD,CAAV;AACH,KAPD,MAOM;AACF;AACA;AACA;AACA,YAAMM,MAAM,GAAGf,UAAU,CAACgB,GAAX,CAAe,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,SAAR;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,OAAD,KAAsC,CAACH,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,GAA1B,CAArD,CAAf;AACAjB,MAAAA,UAAU,CAACY,MAAD,CAAV,CALE,CAMF;AACH;AAEJ;;AAEDpB,EAAAA,SAAS,CAAC,MAAK;AACXkB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAO,IAAAA,KAAK,CAAC,wBAAD,CAAL,CAAgCC,IAAhC,CAAqCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjD,EACCF,IADD,CACMG,IAAI,IAAI;AACVxB,MAAAA,aAAa,CAACwB,IAAD,CAAb;AAEA,YAAMV,MAAM,GAAGU,IAAI,CAACT,GAAL,CAAS,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,SAAR;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,OAAD,KAAsC,CAACH,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,GAA1B,CAA/C,CAAf;AACAjB,MAAAA,UAAU,CAACY,MAAD,CAAV;AAEH,KAPD;AAQH,GAVQ,EAUN,EAVM,CAAT;AAcA,sBACI;AAAA,oCAEI;AAAO,MAAA,KAAK,EAAIX,MAAM,IAAI,EAA1B;AAA8B,MAAA,QAAQ,EAAEsB,CAAC,IAAIpB,YAAY,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE/B,QAArB;AAA+B,MAAA,IAAI,EAAEK;AAArC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArDQH,Q;;KAAAA,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {HEADINGS} from \"./headings\";\n// import FilteringTable from \"./FilteringTable\";\nimport DataTable from \"./DataTable\";\nimport \"./table.css\";\n\nfunction ListPods() {\n    const [podDetails, setPodDetails] = useState([]);\n    const [row, setRowData] = useState([]);\n    const [filter, setFilter] = useState(\"\");\n\n    //filterRecords = (record)=> (record.name.indexOf(this.filter) > -1)\n\n\n    function handleChange(val) {\n        setFilter(val);\n\n        //let filteredRows = [];\n\n        if(val.trim() !== \"\") {\n            const filteredRows = row.filter((r) => r[0].toLowerCase().indexOf(val.toLowerCase()) > -1);\n            console.log(\"filteredRows : \", filteredRows)\n            //setPodDetails(filteredRows);\n            //const result = filteredRows.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n            //console.log(\"result : \", result)\n            setRowData(filteredRows);\n        }else {\n            //console.log(\"prevPodDetails : \", prevPodDetails)\n            //console.log(\"prevRowData : \", prevRowData)\n            //setPodDetails(prevPodDetails);\n            const result = podDetails.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n            setRowData(result)\n            //setRowData(prevRowData);    \n        }\n        \n    }\n  \n    useEffect(()=> {\n        console.log(\"===use effect call===\");\n        fetch(\"http://localhost:3001/\").then(response => response.json())\n        .then(data => {\n            setPodDetails(data)\n            \n            const result = data.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n            setRowData(result)\n            \n        });\n    }, [])\n\n    \n\n    return(\n        <div>\n            Pods\n            <input value = {filter || \"\"} onChange={e => handleChange(e.target.value)}/>\n            \n            <DataTable headings={HEADINGS} rows={row} />\n        </div>\n    )\n}\n\nexport default ListPods;"]},"metadata":{},"sourceType":"module"}