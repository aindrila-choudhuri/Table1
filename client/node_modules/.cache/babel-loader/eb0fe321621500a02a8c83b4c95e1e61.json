{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/achoudhuri/Study/CodePractice/PODTable/client/src/components/ListPods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { HEADINGS } from \"./headings\"; // import FilteringTable from \"./FilteringTable\";\n\nimport DataTable from \"./DataTable\";\nimport \"./table.css\";\n\nfunction ListPods() {\n  _s();\n\n  const [podDetails, setPodDetails] = useState([]);\n  const [row, setRowData] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  let prevPodDetails = [];\n  let prevRowData = [];\n\n  function handleChange(val) {\n    setFilter(val); //let filteredRows = [];\n\n    console.log(\"handleChange prevPodDetails : \", prevPodDetails);\n    console.log(\"handleChange prevRowData : \", prevRowData);\n\n    if (val.trim() !== \"\") {\n      const filteredRows = podDetails.filter(row => row.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      console.log(\"filteredRows : \", filteredRows);\n      setPodDetails(filteredRows);\n      const result = filteredRows.map(({\n        name,\n        nameSpace,\n        status,\n        age\n      }) => [name, nameSpace, status, age]);\n      console.log(\"result : \", result);\n      setRowData(result);\n      console.log(\"if prevPodDetails : \", prevPodDetails);\n      console.log(\"if prevRowData : \", prevRowData);\n    } else {\n      console.log(\"prevPodDetails : \", prevPodDetails);\n      console.log(\"prevRowData : \", prevRowData); // setPodDetails(prevPodDetails);\n      // setRowData(prevRowData);    \n    }\n  }\n\n  useEffect(() => {\n    console.log(\"===use effect call===\");\n    fetch(\"http://localhost:3001/\").then(response => response.json()).then(data => {\n      setPodDetails(data);\n      const result = data.map(({\n        name,\n        nameSpace,\n        status,\n        age\n      }) => [name, nameSpace, status, age]);\n      setRowData(result);\n      prevPodDetails = JSON.parse(JSON.stringify(data));\n      prevRowData = JSON.parse(JSON.stringify(result));\n      console.log(\"use effect prevPodDetails : \", prevPodDetails);\n      console.log(\"use effect prevRowData : \", prevRowData);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Pods\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter || \"\",\n      onChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      headings: HEADINGS,\n      rows: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPods, \"pJ56XjDN5i274KiI4DgH09FbNwA=\");\n\n_c = ListPods;\nexport default ListPods;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPods\");","map":{"version":3,"sources":["/home/achoudhuri/Study/CodePractice/PODTable/client/src/components/ListPods.js"],"names":["React","useEffect","useState","HEADINGS","DataTable","ListPods","podDetails","setPodDetails","row","setRowData","filter","setFilter","prevPodDetails","prevRowData","handleChange","val","console","log","trim","filteredRows","name","toLowerCase","indexOf","result","map","nameSpace","status","age","fetch","then","response","json","data","JSON","parse","stringify","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,aAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,GAAD,EAAMC,UAAN,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIU,cAAc,GAAG,EAArB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAGA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvBJ,IAAAA,SAAS,CAACI,GAAD,CAAT,CADuB,CAGvB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CL,cAA9C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CJ,WAA3C;;AAEA,QAAGE,GAAG,CAACG,IAAJ,OAAe,EAAlB,EAAsB;AAClB,YAAMC,YAAY,GAAGb,UAAU,CAACI,MAAX,CAAmBF,GAAD,IAASA,GAAG,CAACY,IAAJ,CAASC,WAAT,GAAuBC,OAAvB,CAA+BP,GAAG,CAACM,WAAJ,EAA/B,IAAoD,CAAC,CAAhF,CAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,YAA/B;AACAZ,MAAAA,aAAa,CAACY,YAAD,CAAb;AACA,YAAMI,MAAM,GAAGJ,YAAY,CAACK,GAAb,CAAiB,CAAC;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,SAAR;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,OAAD,KAAsC,CAACP,IAAD,EAAOK,SAAP,EAAkBC,MAAlB,EAA0BC,GAA1B,CAAvD,CAAf;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,MAAzB;AACAd,MAAAA,UAAU,CAACc,MAAD,CAAV;AAEAP,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,cAApC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,WAAjC;AACH,KAVD,MAUM;AACFG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,cAAjC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,WAA9B,EAFE,CAGF;AACA;AACH;AAEJ;;AAEDZ,EAAAA,SAAS,CAAC,MAAK;AACXe,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAW,IAAAA,KAAK,CAAC,wBAAD,CAAL,CAAgCC,IAAhC,CAAqCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjD,EACCF,IADD,CACMG,IAAI,IAAI;AACVzB,MAAAA,aAAa,CAACyB,IAAD,CAAb;AAEA,YAAMT,MAAM,GAAGS,IAAI,CAACR,GAAL,CAAS,CAAC;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,SAAR;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,OAAD,KAAsC,CAACP,IAAD,EAAOK,SAAP,EAAkBC,MAAlB,EAA0BC,GAA1B,CAA/C,CAAf;AACAlB,MAAAA,UAAU,CAACc,MAAD,CAAV;AAEAX,MAAAA,cAAc,GAAGqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAjB;AACAnB,MAAAA,WAAW,GAAGoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,MAAf,CAAX,CAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CL,cAA5C;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCJ,WAAzC;AAEH,KAZD;AAaH,GAfQ,CAAT;AAmBA,sBACI;AAAA,oCAEI;AAAO,MAAA,KAAK,EAAIH,MAAM,IAAI,EAA1B;AAA8B,MAAA,QAAQ,EAAE0B,CAAC,IAAItB,YAAY,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEnC,QAArB;AAA+B,MAAA,IAAI,EAAEK;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5DQH,Q;;KAAAA,Q;AA8DT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {HEADINGS} from \"./headings\";\n// import FilteringTable from \"./FilteringTable\";\nimport DataTable from \"./DataTable\";\nimport \"./table.css\";\n\nfunction ListPods() {\n    const [podDetails, setPodDetails] = useState([]);\n    const [row, setRowData] = useState([]);\n    const [filter, setFilter] = useState(\"\");\n    let prevPodDetails = [];\n    let prevRowData = [];\n\n\n    function handleChange(val) {\n        setFilter(val);\n\n        //let filteredRows = [];\n        console.log(\"handleChange prevPodDetails : \", prevPodDetails)\n        console.log(\"handleChange prevRowData : \", prevRowData)\n\n        if(val.trim() !== \"\") {\n            const filteredRows = podDetails.filter((row) => row.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n            console.log(\"filteredRows : \", filteredRows)\n            setPodDetails(filteredRows);\n            const result = filteredRows.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n            console.log(\"result : \", result)\n            setRowData(result);\n\n            console.log(\"if prevPodDetails : \", prevPodDetails)\n            console.log(\"if prevRowData : \", prevRowData)\n        }else {\n            console.log(\"prevPodDetails : \", prevPodDetails)\n            console.log(\"prevRowData : \", prevRowData)\n            // setPodDetails(prevPodDetails);\n            // setRowData(prevRowData);    \n        }\n        \n    }\n  \n    useEffect(()=> {\n        console.log(\"===use effect call===\");\n        fetch(\"http://localhost:3001/\").then(response => response.json())\n        .then(data => {\n            setPodDetails(data)\n            \n            const result = data.map(({ name, nameSpace, status, age }) => [name, nameSpace, status, age]);\n            setRowData(result)\n\n            prevPodDetails = JSON.parse(JSON.stringify(data));\n            prevRowData = JSON.parse(JSON.stringify(result));\n            console.log(\"use effect prevPodDetails : \", prevPodDetails)\n            console.log(\"use effect prevRowData : \", prevRowData)\n            \n        });\n    })\n\n    \n\n    return(\n        <div>\n            Pods\n            <input value = {filter || \"\"} onChange={e => handleChange(e.target.value)}/>\n            <DataTable headings={HEADINGS} rows={row} />\n        </div>\n    )\n}\n\nexport default ListPods;"]},"metadata":{},"sourceType":"module"}